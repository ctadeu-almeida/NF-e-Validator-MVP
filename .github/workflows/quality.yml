name: Code Quality

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy ruff radon complexity-report

    - name: Code formatting with Black
      run: |
        black --line-length 88 src/ tests/
        echo "Black formatting completed"

    - name: Import sorting with isort
      run: |
        isort src/ tests/
        echo "Import sorting completed"

    - name: Linting with Ruff
      run: |
        ruff check --fix src/ tests/ || true
        ruff check src/ tests/ --format=github

    - name: Type checking with MyPy
      run: |
        mypy src/ --ignore-missing-imports --install-types --non-interactive

    - name: Complexity analysis
      run: |
        radon cc src/ -a -nb
        radon mi src/ -nb

    - name: Generate quality report
      run: |
        echo "## Code Quality Report" > quality-report.md
        echo "### Complexity Metrics" >> quality-report.md
        radon cc src/ -a -nb >> quality-report.md
        echo "### Maintainability Index" >> quality-report.md
        radon mi src/ -nb >> quality-report.md

    - name: Upload quality report
      uses: actions/upload-artifact@v3
      with:
        name: quality-report
        path: quality-report.md

    - name: Comment PR with quality metrics
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('quality-report.md')) {
            const report = fs.readFileSync('quality-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“Š Code Quality Report\n\n${report}`
            });
          }